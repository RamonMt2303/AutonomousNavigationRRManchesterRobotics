<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="Puzzlebot_Hacker_Ed.">

<!-- files for gazebo costumization -->
<xacro:include filename="$(find puzzlebot_description)/urdf/jetson_ed/materials_jetson_ed.xacro" />
<xacro:include filename="$(find puzzlebot_description)/urdf/jetson_ed/parameters_jetson_ed_v1.xacro" />
<xacro:include filename="$(find puzzlebot_description)/urdf/jetson_ed/macros_jetson_ed.xacro" />
<xacro:include filename="$(find puzzlebot_description)/urdf/jetson_ed/puzzlebot_jetson_ed_v1.gazebo.xacro" />

<!--LINKS-->

<!-- Dummy link to fix robot chassis -->
    <link name="base_footprint">
    </link>
  
    <link name="base_link">
        <visual>
            <origin xyz="${chassis_mesh_pos_x} ${chassis_mesh_pos_y} ${chassis_mesh_pos_z}" rpy="${chassis_mesh_pos_r} ${chassis_mesh_pos_p} ${chassis_mesh_pos_w}"/>
            <geometry>
                <mesh filename="file://${mesh_puzzlebot_chassis}"/>
            </geometry>
            <material name="yellow"/>
        </visual>

        <collision>
            <origin xyz="${chassis_collision_pos_x} ${chassis_collision_pos_y} ${chassis_collision_pos_z}" rpy="${chassis_collision_pos_r} ${chassis_collision_pos_p} ${chassis_collision_pos_w}"/>
            <geometry>
                <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
            </geometry>
        </collision>

        <inertial>
            <origin xyz="-${chassis_inertia_pos_x} ${chassis_inertia_pos_y} ${chassis_inertia_pos_z}" rpy="${chassis_inertia_pos_r} ${chassis_inertia_pos_p} ${chassis_inertia_pos_w}"/>
            <mass value="${chassis_mass}"/>
            <xacro:box_inertia mass="${chassis_mass}" x="${chassis_length}" y="${chassis_width}" z="${chassis_height}" />
        </inertial>
    </link>

    <link name="wheel_left_link">
        <visual>
            <origin xyz="${wheel_mesh_pos_x} ${wheel_mesh_pos_y} ${wheel_mesh_pos_z}" rpy="${wheel_mesh_pos_r} ${wheel_mesh_pos_p} ${wheel_mesh_pos_w}" />
            <geometry>
                <mesh filename="file://${mesh_puzzlebot_wheel}"/>
            </geometry>
            <material name="yellow"/>
        </visual>

        <collision>
            <origin xyz="${wheel_collision_pos_x} ${wheel_collision_pos_y} ${wheel_collision_pos_z}" rpy="${wheel_collision_pos_r} ${wheel_collision_pos_p} ${wheel_collision_pos_w}"/>
            <geometry>
                <cylinder length="${wheel_height}" radius="${wheel_radius}" />
            </geometry>
        </collision>

        <inertial>
            <origin xyz="${wheel_inertia_pos_x} ${wheel_inertia_pos_y} ${wheel_inertia_pos_z}" rpy="${wheel_inertia_pos_r} ${wheel_inertia_pos_p} ${wheel_inertia_pos_w}"/>
            <mass value="${wheel_mass}"/>
            <xacro:cylinderical_tube_inertia r1="${wheel_radius}" r2="${wheel_radius/4.0}" height="${wheel_height}" mass="${wheel_mass}"/> 
        </inertial>
    </link>

    <link name="wheel_right_link">
        <visual>
            <origin xyz="${wheel_mesh_pos_x} ${wheel_mesh_pos_y} ${wheel_mesh_pos_z}" rpy="${wheel_mesh_pos_r} -${wheel_mesh_pos_p} ${wheel_mesh_pos_w}" />
            <geometry>
                <mesh filename="file://${mesh_puzzlebot_wheel}"/>
            </geometry>
            <material name="yellow"/>
        </visual>

        <collision>
            <origin xyz="${wheel_collision_pos_x} ${wheel_collision_pos_y} ${wheel_collision_pos_z}" rpy="-${wheel_collision_pos_r} ${wheel_collision_pos_p} ${wheel_collision_pos_w}"/>
            <geometry>
                <cylinder length="${wheel_height}" radius="${wheel_radius}" />
            </geometry>
        </collision>

        <inertial>
            <origin xyz="${wheel_inertia_pos_x} ${wheel_inertia_pos_y} ${wheel_inertia_pos_z}" rpy="-${wheel_inertia_pos_r} ${wheel_inertia_pos_p} ${wheel_inertia_pos_w}"/>
            <mass value="${wheel_mass}"/>
            <xacro:cylinderical_tube_inertia r1="${wheel_radius}" r2="${wheel_radius/4.0}" height="${wheel_height}" mass="${wheel_mass}"/>
        </inertial>
    </link>

    <link name="caster_holder_link">
        <visual>
            <origin xyz="${casterholder_mesh_pos_x} ${casterholder_mesh_pos_y} ${casterholder_mesh_pos_z}" rpy="${casterholder_mesh_pos_r} ${casterholder_mesh_pos_p} ${casterholder_mesh_pos_w}"/>
            <geometry>
                <mesh filename="file://${mesh_puzzlebot_caster}"/>
            </geometry>
            <material name="yellow"/>
        </visual>

        <collision>
            <origin xyz="${casterholder_collision_pos_x} ${casterholder_collision_pos_y} ${casterholder_collision_pos_z}" rpy="${casterholder_collision_pos_r} ${casterholder_collision_pos_p} ${casterholder_collision_pos_w}"/>
            <geometry>
                <box size="${casterholder_length} ${casterholder_width} ${casterholder_height}"/>
            </geometry>
        </collision>

        <inertial>
            <origin xyz="${casterholder_inertia_pos_x} ${casterholder_inertia_pos_y} ${casterholder_inertia_pos_z}" rpy="${casterholder_inertia_pos_r} ${casterholder_inertia_pos_p} ${casterholder_inertia_pos_w}"/>
            <mass value="${casterholder_mass}"/>
            <xacro:box_inertia mass="${casterholder_mass}" x="${casterholder_length}" y="${casterholder_width}" z="${casterholder_height}" />
        </inertial>
    </link>

    <link name="wheel_caster_link">
        <collision>
            <origin xyz="${casterball_collision_pos_x} ${casterball_collision_pos_y} ${casterball_collision_pos_z}" rpy="${casterball_collision_pos_r} ${casterball_collision_pos_p} ${casterball_collision_pos_w}"/>
            <geometry>
                <sphere radius="${casterball_radius}"/>
            </geometry>
        </collision>

        <inertial>
            <origin xyz="${casterball_inertia_pos_x} ${casterball_inertia_pos_y} ${casterball_inertia_pos_z}" rpy="${casterball_inertia_pos_r} ${casterball_inertia_pos_p} ${casterball_inertia_pos_w}"/>
            <mass value="${casterball_mass}"/>
            <xacro:solid_sphere_inertia mass="${casterball_mass}" radius="${casterball_radius}" />
        </inertial>
    </link>

    <link name="motor_left_link">
        <visual>
            <origin xyz="${motor_mesh_pos_x} ${motor_mesh_pos_y} ${motor_mesh_pos_z}" rpy="${motor_mesh_pos_r} ${motor_mesh_pos_p} ${motor_mesh_pos_w}"/>
            <geometry>
                <mesh filename="file://${mesh_puzzlebot_motor_left}"/>
            </geometry>
            <material name="grey"/>
        </visual>

        <collision>
            <origin xyz="${motor_collision_pos_x} ${motor_collision_pos_y} ${motor_collision_pos_z}" rpy="${motor_collision_pos_r} ${motor_collision_pos_p} ${motor_collision_pos_w}"/>
            <geometry>
                <cylinder length="${motor_height}" radius="${motor_radius}" />
            </geometry>
        </collision>

        <inertial>
            <origin xyz="${motor_inertia_pos_x} ${motor_inertia_pos_y} ${motor_inertia_pos_z}" rpy="${motor_inertia_pos_r} ${motor_inertia_pos_p} ${motor_inertia_pos_w}"/>
            <mass value="${motor_mass}"/>
            <xacro:cylinder_inertia radius="${motor_radius}" height="${motor_height}" mass="${motor_mass}"/> 
        </inertial>
    </link>

    <link name="motor_right_link">
        <visual>
            <origin xyz="${motor_mesh_pos_x} -${motor_mesh_pos_y} ${motor_mesh_pos_z}" rpy="${motor_mesh_pos_r} ${-motor_mesh_pos_p} ${motor_mesh_pos_w+PI}"/>
            <geometry>
                <mesh filename="file://${mesh_puzzlebot_motor_right}"/>
            </geometry>
            <material name="grey"/>
        </visual>

        <collision>
            <origin xyz="${motor_collision_pos_x} ${motor_collision_pos_y} ${motor_collision_pos_z}" rpy="${motor_collision_pos_r} ${motor_collision_pos_p} ${motor_collision_pos_w}"/>
            <geometry>
                <cylinder length="${motor_height}" radius="${motor_radius}" />
            </geometry>
        </collision>

        <inertial>
            <origin xyz="${motor_inertia_pos_x} -${motor_inertia_pos_y} ${motor_inertia_pos_z}" rpy="${motor_inertia_pos_r} ${motor_inertia_pos_p} ${motor_inertia_pos_w}"/>
            <mass value="${motor_mass}"/>
            <xacro:cylinder_inertia radius="${motor_radius}" height="${motor_height}" mass="${motor_mass}"/> 
        </inertial>
    </link>

    <link name="powerbank_link">
        <visual>
            <origin xyz="${powerbank_mesh_pos_x} ${powerbank_mesh_pos_y} ${powerbank_mesh_pos_z}" rpy="${powerbank_mesh_pos_r} ${powerbank_mesh_pos_p} ${powerbank_mesh_pos_w}"/>
            <geometry>
                <mesh filename="file://${mesh_puzzlebot_battery}"/>
            </geometry>
            <material name="black"/>
        </visual>
  
        <collision>
            <origin xyz="${powerbank_collision_pos_x} ${powerbank_collision_pos_y} ${powerbank_collision_pos_z}" rpy="${powerbank_collision_pos_r} ${powerbank_collision_pos_p} ${powerbank_collision_pos_w}"/>
            <geometry>
                <box size="${powerbank_length} ${powerbank_width} ${powerbank_height}"/>
            </geometry>
        </collision>

        <inertial>
            <origin xyz="${powerbank_inertia_pos_x} ${powerbank_inertia_pos_y} ${powerbank_inertia_pos_z}" rpy="${powerbank_inertia_pos_r} ${powerbank_inertia_pos_p} ${powerbank_inertia_pos_w}"/>
            <mass value="${powerbank_mass}"/>
            <xacro:box_inertia mass="${powerbank_mass}" x="${powerbank_length}" y="${powerbank_width}" z="${powerbank_height}" />
        </inertial>
    </link>
    
    <link name="jetson_link">
        <visual>
            <origin xyz="${jetson_mesh_pos_x} ${jetson_mesh_pos_y} ${jetson_mesh_pos_z}" rpy="${jetson_mesh_pos_r} ${jetson_mesh_pos_p} ${jetson_mesh_pos_w}"/>
            <geometry>
                <mesh filename="file://${mesh_puzzlebot_jetson}"/>
            </geometry>
            <material name="grey"/>
        </visual>
  
        <collision>
            <origin xyz="${jetson_collision_pos_x} ${jetson_collision_pos_y} ${jetson_collision_pos_z}" rpy="${jetson_collision_pos_r} ${jetson_collision_pos_p} ${jetson_collision_pos_w}"/>
            <geometry>
                <box size="${jetson_length} ${jetson_width} ${jetson_height+jetson_offset}"/>
            </geometry>
        </collision>

        <inertial>
            <origin xyz="${jetson_inertia_pos_x} ${jetson_inertia_pos_y} ${jetson_inertia_pos_z}" rpy="${jetson_inertia_pos_r} ${jetson_inertia_pos_p} ${jetson_inertia_pos_w}"/>
            <mass value="${jetson_mass}"/>
            <xacro:box_inertia mass="${jetson_mass}" x="${jetson_length}" y="${jetson_width}" z="${jetson_height}" />
        </inertial>
    </link>

    <link name="camera_base_link">
        <visual>
            <origin xyz="${camera_base_mesh_pos_x} ${camera_base_mesh_pos_y} ${camera_base_mesh_pos_z}" rpy="${camera_base_mesh_pos_r} ${camera_base_mesh_pos_p} ${camera_base_mesh_pos_w}"/>
            <geometry>
                <mesh filename="file://${mesh_puzzlebot_camera}"/>
            </geometry>
            <material name="grey"/>
        </visual>
  
        <collision>
            <origin xyz="${camera_base_collision_pos_x} ${camera_base_collision_pos_y} ${camera_base_collision_pos_z}" rpy="${camera_base_collision_pos_r} ${camera_base_collision_pos_p} ${camera_base_collision_pos_w}"/>
            <geometry>
                <box size="${camera_base_length} ${camera_base_width} ${camera_base_height}"/>
            </geometry>
        </collision>

        <inertial>
            <origin xyz="${camera_base_inertia_pos_x} ${camera_base_inertia_pos_y} ${camera_base_inertia_pos_z}" rpy="${camera_base_inertia_pos_r} ${camera_base_inertia_pos_p} ${camera_base_inertia_pos_w}"/>
            <mass value="${camera_base_mass}"/>
            <xacro:box_inertia mass="${camera_base_mass}" x="${camera_base_length}" y="${camera_base_width}" z="${camera_base_height}" />
        </inertial>
    </link>

    <link name="camera_link">
        <collision>
            <origin xyz="${camera_collision_pos_x} ${camera_collision_pos_y} ${camera_collision_pos_z}" rpy="${camera_collision_pos_r} ${camera_collision_pos_p} ${camera_collision_pos_w}"/>
            <geometry>
                <box size="${camera_length} ${camera_width} ${camera_height}"/>
            </geometry>
        </collision>

        <inertial>
            <origin xyz="${camera_inertia_pos_x} ${camera_inertia_pos_y} ${camera_inertia_pos_z}" rpy="${camera_inertia_pos_r} ${camera_inertia_pos_p} ${camera_inertia_pos_w}"/>
            <mass value="${camera_mass}"/>
            <xacro:box_inertia mass="${camera_mass}" x="${camera_length}" y="${camera_width}" z="${camera_height}" />
        </inertial>
    </link>

<!--JOINTS-->

    <joint name="chassis_joint" type="fixed">
        <parent link="base_footprint"/>
        <child link="base_link"/>
        <origin xyz="${chassis_pos_x} ${chassis_pos_y} ${chassis_pos_z}" rpy="${chassis_pos_r} ${chassis_pos_p} ${chassis_pos_w}"/>
    </joint>

    <joint name="motor_left_joint" type="fixed">
        <parent link="base_link"/>
        <child link="motor_left_link"/>
        <origin xyz="${motor_pos_x} ${motor_pos_y} ${motor_pos_z}" rpy="${motor_pos_r} ${motor_pos_p} ${motor_pos_w}"/>
    </joint>

    <joint name="motor_right_joint" type="fixed">
        <parent link="base_link"/>
        <child link="motor_right_link"/>
        <origin xyz="${motor_pos_x} -${motor_pos_y} ${motor_pos_z}" rpy="${motor_pos_r} ${motor_pos_p} ${motor_pos_w}"/>
    </joint>

    <joint name="powerbank_joint" type="fixed">
        <parent link="base_link"/>
        <child link="powerbank_link"/>
        <origin xyz="-${powerbank_pos_x} ${powerbank_pos_y} -${powerbank_pos_z}" rpy="${powerbank_pos_r} ${powerbank_pos_p} ${powerbank_pos_w}"/>
    </joint>

    <joint name="jetson_joint" type="fixed">
        <parent link="base_link"/>
        <child link="jetson_link"/>
        <origin xyz="${jetson_pos_x} ${jetson_pos_y} ${jetson_pos_z}" rpy="${jetson_pos_r} ${jetson_pos_p} ${jetson_pos_w}"/>
    </joint>

    <joint name="camera_base_joint" type="fixed">
        <parent link="base_link"/>
        <child link="camera_base_link"/>
        <origin xyz="${camera_base_pos_x} ${camera_base_pos_y} ${camera_base_pos_z}" rpy="${camera_base_pos_r} ${camera_base_pos_p} ${camera_base_pos_w}"/>
    </joint>

    <joint name="camera_joint" type="fixed">
        <parent link="camera_base_link"/>
        <child link="camera_link"/>
        <origin xyz="${camera_pos_x} ${camera_pos_y} ${camera_pos_z}" rpy="${camera_pos_r} ${camera_pos_p} ${camera_pos_w}"/>
    </joint>

    <joint name="wheel_right_joint" type="continuous">
        <parent link="base_link"/> 
        <child link="wheel_right_link"/> 
        <origin xyz="${wheel_pos_x} -${wheel_pos_y} ${wheel_pos_z}" rpy="-${wheel_pos_r} ${wheel_pos_p} ${wheel_pos_w}"/>
        <axis xyz="0 0 1"/> 
    </joint>

    <joint name="wheel_left_joint" type="continuous">
        <parent link="base_link"/>
        <child link="wheel_left_link"/>
        <origin xyz="${wheel_pos_x} ${wheel_pos_y} ${wheel_pos_z}" rpy="-${wheel_pos_r} ${wheel_pos_p} ${wheel_pos_w}"/>
        <axis xyz="0 0 1"/>
    </joint>

    <joint name="caster_holder_joint" type="fixed">
        <parent link="base_link"/>
        <child link="caster_holder_link"/>
        <origin xyz="${casterholder_pos_x} ${casterholder_pos_y} ${casterholder_pos_z}" rpy="${casterholder_pos_r} ${casterholder_pos_p} ${casterholder_pos_w}"/>
    </joint>

    <joint name="wheel_caster_joint" type="fixed">
        <parent link="caster_holder_link"/>
        <child link="wheel_caster_link"/>
        <origin xyz="${casterball_pos_x} ${casterball_pos_y} ${casterball_pos_z}" rpy="${casterball_pos_r} ${casterball_pos_p} ${casterball_pos_w}"/>
    </joint>

<!--TRANSMISSIONS--> 

<!-- TRANSMISSIONS (For a more complex model and it represents actuator attributes) -->
<transmission name="wheel_right_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="wheel_right_joint">
    	<hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="wheel_right_motor">
      <hardwareInterface>VelocityJointInterface</hardwareInterface>
      <mechanicalReduction>34</mechanicalReduction>
    </actuator>
  </transmission>

<transmission name="wheel_left_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="wheel_left_joint">
    	<hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="wheel_left_motor">
      <hardwareInterface>VelocityJointInterface</hardwareInterface>
      <mechanicalReduction>34</mechanicalReduction>
    </actuator>
</transmission> 

</robot>